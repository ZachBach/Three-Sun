{"id":"js/shaderAround/fragment.glsl","dependencies":[{"name":"C:\\Users\\auern\\sun\\package.json","includedInParent":true,"mtime":1633355644916}],"generated":{"js":"module.exports = \"#define GLSLIFY 1\\nuniform float time;\\nuniform float progress;\\nuniform sampler2D texture1;\\nuniform vec4 resolution;\\nuniform samplerCube uPerlin;\\nvarying vec2 vUv;\\nvarying vec3 vPosition;\\nvarying vec3 vNormal;\\nvarying vec3 vLayer0;\\nvarying vec3 vLayer1;\\nvarying vec3 vLayer2;\\nvarying vec3 eyeVector;\\nfloat PI=3.141592653589793238;\\n\\nfloat Fresnel(vec3 eyeVector, vec3 worldNormal) {\\n  return pow(1.0 + dot(eyeVector, worldNormal), 3.0);\\n}\\n\\nvec3 brightnessToColor(float b) {\\n    b*=0.250;\\n\\n    return vec3(b,b*b, b*b*b*b)*3.;\\n}\\n\\nfloat  supersun() {\\n    float sum = 0.;\\n    sum += textureCube(uPerlin, vLayer0).r;\\n    sum += textureCube(uPerlin, vLayer1).r;\\n    sum += textureCube(uPerlin, vLayer2).r;\\n    sum *= 0.33;\\n    return sum;\\n}\\n\\nvoid main(){\\n    // float brightness = supersun();\\n    // brightness = brightness*4. + 1.;\\n// gl_FragColor = vec4();\\n// float fres = Fresnel(eyeVector, vNormal);\\n//     brightness += fres;\\n    float radial = 1. - vPosition.z;\\n    radial *= radial*radial;\\n\\n    float brightness = 1. + radial*0.83;\\n\\n    gl_FragColor.rgb = brightnessToColor(brightness)*radial;\\n    gl_FragColor.a = radial;\\n\\n    // vec3 col = brightnessToColor(brightness);\\n    // gl_FragColor = vec4(col,1.);\\n    //  gl_FragColor = vec4(radial,0.,0.,1.);\\n    // gl_FragColor = vec4(fres);\\n// gl_FragColor = vec4(vLayer2, 1.);\\n// gl_FragColor = vec4(vUv,1.,1.);\\n// gl_FragColor = vec4(1.,0.,1.,1.);\\n}\";"},"sourceMaps":{"js":{"mappings":[{"name":"module","generated":{"line":1,"column":0},"source":"js/shaderAround/fragment.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":6},"source":"js/shaderAround/fragment.glsl","original":{"line":1,"column":6}},{"name":"exports","generated":{"line":1,"column":7},"source":"js/shaderAround/fragment.glsl","original":{"line":1,"column":7}},{"generated":{"line":1,"column":14},"source":"js/shaderAround/fragment.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":17},"source":"js/shaderAround/fragment.glsl","original":{"line":1,"column":15}},{"generated":{"line":1,"column":1471},"source":"js/shaderAround/fragment.glsl","original":{"line":1,"column":0}}],"sources":{"js/shaderAround/fragment.glsl":"module.exports=\"#define GLSLIFY 1\\nuniform float time;\\nuniform float progress;\\nuniform sampler2D texture1;\\nuniform vec4 resolution;\\nuniform samplerCube uPerlin;\\nvarying vec2 vUv;\\nvarying vec3 vPosition;\\nvarying vec3 vNormal;\\nvarying vec3 vLayer0;\\nvarying vec3 vLayer1;\\nvarying vec3 vLayer2;\\nvarying vec3 eyeVector;\\nfloat PI=3.141592653589793238;\\n\\nfloat Fresnel(vec3 eyeVector, vec3 worldNormal) {\\n  return pow(1.0 + dot(eyeVector, worldNormal), 3.0);\\n}\\n\\nvec3 brightnessToColor(float b) {\\n    b*=0.250;\\n\\n    return vec3(b,b*b, b*b*b*b)*3.;\\n}\\n\\nfloat  supersun() {\\n    float sum = 0.;\\n    sum += textureCube(uPerlin, vLayer0).r;\\n    sum += textureCube(uPerlin, vLayer1).r;\\n    sum += textureCube(uPerlin, vLayer2).r;\\n    sum *= 0.33;\\n    return sum;\\n}\\n\\nvoid main(){\\n    // float brightness = supersun();\\n    // brightness = brightness*4. + 1.;\\n// gl_FragColor = vec4();\\n// float fres = Fresnel(eyeVector, vNormal);\\n//     brightness += fres;\\n    float radial = 1. - vPosition.z;\\n    radial *= radial*radial;\\n\\n    float brightness = 1. + radial*0.83;\\n\\n    gl_FragColor.rgb = brightnessToColor(brightness)*radial;\\n    gl_FragColor.a = radial;\\n\\n    // vec3 col = brightnessToColor(brightness);\\n    // gl_FragColor = vec4(col,1.);\\n    //  gl_FragColor = vec4(radial,0.,0.,1.);\\n    // gl_FragColor = vec4(fres);\\n// gl_FragColor = vec4(vLayer2, 1.);\\n// gl_FragColor = vec4(vUv,1.,1.);\\n// gl_FragColor = vec4(1.,0.,1.,1.);\\n}\";"},"lineCount":null}},"error":null,"hash":"3d1111495b0813f856773e35ec1fe2ce","cacheData":{"env":{}}}